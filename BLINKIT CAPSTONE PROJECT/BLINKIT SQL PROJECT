create database blinkitdb;
use blinkitdb;

select * from blinkit_data;

select count(*) from blinkit_data;


#1.
UPDATE blinkit_data
SET `Item Fat Content` = 
    CASE 
        WHEN `Item Fat Content` IN ('LF', 'low fat') THEN 'Low Fat'
        WHEN `Item Fat Content` = 'reg' THEN 'Regular'
        ELSE `Item Fat Content`
    END;
select distinct(`Item Fat Content`) from blinkit_data;

#2. Total Sales
SELECT 
    CAST(SUM(Sales) / 1000000 AS DECIMAL (10 , 2 )) AS total_sales
FROM
    blinkit_data;
    
#3. Total sales of low fat
SELECT 
    CAST(SUM(Sales) / 1000000 AS DECIMAL (10 , 2 )) AS total_sales
FROM
    blinkit_data
WHERE
    `Item Fat Content` = 'Low Fat';
    
#4. find Total sales where establishment year is 2022
SELECT 
    CAST(SUM(Sales) / 1000000 AS DECIMAL (10 , 2 )) AS total_sales
FROM
    blinkit_data
WHERE  `Outlet Establishment Year` = 2022;
    
#5. Find Average total sales
SELECT 
    CAST(AVG(sales) AS DECIMAL (10 , 2 )) AS average_sales
FROM
    blinkit_data;

#6. Number of Items 
SELECT 
    COUNT(*) AS no_of_items
FROM
    blinkit_data;
    
#7. Average Rating
SELECT 
    CAST(AVG(Rating) AS DECIMAL (10 , 2 )) AS avg_rating
FROM
    blinkit_data;   
 
 #8. Find total sales, average sales, no of items, average rating.
SELECT 
    `Item Fat Content`,
    CAST(SUM(sales) AS DECIMAL (10 , 2 )) AS total_sales,
	CAST(AVG(sales) AS DECIMAL (10 , 2 )) AS average_sales,
    COUNT(*) AS no_of_items,
	cast(avg(Rating) as decimal(10,2)) as avg_rating
FROM
    blinkit_data
    WHERE  `Outlet Establishment Year` = 2022
GROUP BY `Item Fat Content`
order by total_sales desc;

#9. Total sales by Item type 
SELECT 
    `Item Type`,
    CAST(SUM(sales) AS DECIMAL (10 , 2 )) AS total_sales,
	CAST(AVG(sales) AS DECIMAL (10 , 2 )) AS average_sales,
    COUNT(*) AS no_of_items,
	cast(avg(Rating) as decimal(10,2)) as avg_rating
FROM
    blinkit_data
    WHERE  `Outlet Establishment Year` = 2022
GROUP BY `Item Type`
order by total_sales asc
limit 5 ;

#10. Fat Content by outlet for total sales 
SELECT 
    `Outlet Location Type`, `Item Fat Content`,
    CAST(SUM(sales) AS DECIMAL (10 , 2 )) AS total_sales
FROM
    blinkit_data
GROUP BY `Outlet Location Type`, `Item Fat Content`
order by total_sales asc;
--
SELECT 
    `Outlet Location Type`  AS outlet_location_type,
    SUM(CASE WHEN `Item Fat Content` = 'Low Fat'  THEN Sales ELSE 0 END) AS low_fat,
    SUM(CASE WHEN `Item Fat Content` = 'Regular' THEN Sales ELSE 0 END) AS regular
FROM blinkit_data
GROUP BY `Outlet Location Type`
ORDER BY `Outlet Location Type`;

#11. Total sales by outlect establishment
 SELECT 
    `Outlet Establishment Year`,
    CAST(SUM(sales) AS DECIMAL (10 , 2 )) AS total_sales
FROM
    blinkit_data
GROUP BY `Outlet Establishment Year`
order by total_sales asc;

#12. find  Total sales, average sales,no of items, average rating by outlect establishment year
 SELECT 
    `Outlet Establishment Year`,
    CAST(SUM(sales) AS DECIMAL (10 , 2 )) AS total_sales,
	CAST(AVG(sales) AS DECIMAL (10 , 2 )) AS average_sales,
    COUNT(*) AS no_of_items,
	cast(avg(Rating) as decimal(10,2)) as avg_rating
FROM
    blinkit_data
GROUP BY `Outlet Establishment Year`
order by total_sales desc;

#13. Percentage of sales by outlet size
SELECT 
    `outlet size`, 
    CAST(SUM(sales) AS DECIMAL(10,2)) AS total_sales,
    CAST((SUM(sales) * 100.0 / SUM(SUM(sales)) OVER ()) AS DECIMAL(10,2)) AS percentage_contribution
FROM blinkit_data
GROUP BY `outlet size`
ORDER BY total_sales DESC;

--
 SELECT 
    `Outlet Location Type`,
    CAST(SUM(sales) AS DECIMAL (10 , 2 )) AS total_sales,
	CAST(AVG(sales) AS DECIMAL (10 , 2 )) AS average_sales,
    COUNT(*) AS no_of_items,
	cast(avg(Rating) as decimal(10,2)) as avg_rating,
    CAST((SUM(sales) * 100.0 / SUM(SUM(sales)) OVER ()) AS DECIMAL(10,2)) AS percentage_contribution
FROM
    blinkit_data
    where `Outlet Establishment Year` = 2022
GROUP BY `Outlet Location Type`
order by total_sales desc;

#14. All Metrics by Outlet Type
 SELECT 
    `Outlet Type`,
    CAST(SUM(sales) AS DECIMAL (10 , 2 )) AS total_sales,
	CAST(AVG(sales) AS DECIMAL (10 , 2 )) AS average_sales,
    COUNT(*) AS no_of_items,
	cast(avg(Rating) as decimal(10,2)) as avg_rating,
    CAST((SUM(sales) * 100.0 / SUM(SUM(sales)) OVER ()) AS DECIMAL(10,2)) AS percentage_contribution
FROM
    blinkit_data
GROUP BY `Outlet Type`
order by total_sales desc;
